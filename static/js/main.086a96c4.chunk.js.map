{"version":3,"sources":["Components/Background/Background.js","store/slices/brawlers/index.js","Components/Filter/Filter.js","Components/Search/Search.js","pages/Home/StyledHome.js","pages/Home/Home.js","Components/NavBar/NavBar.js","store/slices/maps/index.js","Components/Filter/FilterMaps.js","pages/Maps/StyledMaps.js","pages/Maps/Maps.js","pages/Game/StyledGame.js","store/slices/gameModes/index.js","pages/Game/Game.js","App.js","store/index.js","index.js"],"names":["Background","styled","div","_templateObject","Object","taggedTemplateLiteral","props","image","brawlersSlice","createSlice","name","initialState","list","originalList","rarity","reducers","setBrawlers","state","action","payload","nameMap","map","brawler","color","nameMapArr","Map","concat","toConsumableArray","values","noRepeatRarity","setSearchBrawlers","search","filter","toLowerCase","includes","setResetBrawlers","setFilterRarity","setSortBrawlers","sort","sortAsc","sortDesc","actions","a","b","Filter","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","setType","_useState3","_useState4","setAlf","useSelector","brawlers","handleChangeRarity","e","data","target","value","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","wrap","_context4","prev","next","stop","_x4","apply","this","arguments","handleChangeAlf","_ref5","_callee5","_context5","_x5","console","log","react_default","createElement","StyledFilter","className","length","key","style","type","onChange","Filter_templateObject","Search","setSearch","resetBrawler","_ref3","_callee3","_context3","_x3","handleChange","_ref2","_callee2","_context2","_x2","StyledSearch","placeholder","onClick","Search_templateObject","StyledHome","StyledHome_templateObject","Home","loading","setLoading","useEffect","_ref","_callee","response","_context","axios","get","sent","_x","Components_Search_Search","Components_Filter_Filter","id","Number","toString","slice","idNumber","src","imageUrl","alt","class","react_loader_spinner_esm","height","width","ariaLabel","NavBar","colorChange","setColorChange","window","addEventListener","scrollY","Nav","react_router_dom","to","index_esm","nav","NavBar_templateObject","mapsSlice","gameMode","setMaps","unique","noRepeatGameMode","setFilterGameMode","game","FilterMaps","setGame","maps","handeChangeGame","FilterMapsStyled","FilterMaps_templateObject","StyledMaps","StyledMaps_templateObject","Maps","Filter_FilterMaps","StyledGame","StyledGame_templateObject","gameSlice","Game","mode","title","App","Fragment","Components_NavBar_NavBar","react_router","path","element","pages_Home_Home","pages_Maps_Maps","pages_Game_Game","store","configureStore","reducer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.086a96c4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Background = styled.div`\r\n  min-height: 100vh;\r\n  background: url(${props => props.image});\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n\r\n`","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const brawlersSlice = createSlice({\r\n  name: 'brawlers',\r\n  initialState: {\r\n    list: [],\r\n    originalList: [],\r\n    rarity: [],\r\n  },\r\n  reducers: {\r\n    setBrawlers: (state, action) => {\r\n      state.list = action.payload;\r\n      state.originalList = action.payload;\r\n      state.rarity = noRepeatRarity(state);\r\n    },\r\n    setSearchBrawlers: (state, action) => {\r\n      const search = action.payload;\r\n      state.list = state.originalList.filter((brawler) =>\r\n        brawler.name.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    },\r\n    setResetBrawlers: (state, action) => {\r\n      state.list = state.originalList;\r\n    },\r\n    setFilterRarity: (state, action) => {\r\n      const rarity = action.payload;\r\n      rarity === 'ALL'\r\n        ? (state.list = state.originalList)\r\n        : (state.list = state.originalList.filter(\r\n            (brawler) => brawler.rarity.name === rarity\r\n          ));\r\n    },\r\n    setSortBrawlers: (state, action) => {\r\n      const sort = action.payload;\r\n      sort === 'A-Z'\r\n        ? (state.list = state.originalList.sort(sortAsc))\r\n        : (state.list = state.originalList.sort(sortDesc));\r\n    },\r\n  },\r\n});\r\n\r\nexport default brawlersSlice.reducer;\r\n\r\nexport const {\r\n  setBrawlers,\r\n  setSearchBrawlers,\r\n  setResetBrawlers,\r\n  setFilterRarity,\r\n  setSortBrawlers,\r\n} = brawlersSlice.actions;\r\n\r\nexport const fetchBrawlers = () => async (dispatch) => {\r\n  const response = await axios.get('https://api.brawlapi.com/v1/brawlers');\r\n  dispatch(setBrawlers(response.data.list));\r\n};\r\n\r\nexport const searchBrawlers = (data) => async (dispatch) => {\r\n  dispatch(setSearchBrawlers(data));\r\n};\r\n\r\nexport const resetBrawlers = () => async (dispatch) => {\r\n  dispatch(setResetBrawlers());\r\n};\r\n\r\nexport const filterRarity = (data) => async (dispatch) => {\r\n  dispatch(setFilterRarity(data));\r\n};\r\n\r\nexport const sortBrawlers = (data) => async (dispatch) => {\r\n  dispatch(setSortBrawlers(data));\r\n};\r\n\r\n// funcion para no repetir las raritys\r\nfunction noRepeatRarity(state) {\r\n  // filtro para que no se repitan las raritys\r\n  const rarity = state.originalList.map((brawler) => {\r\n    return {\r\n      name: brawler.rarity.name,\r\n      color: brawler.rarity.color,\r\n    };\r\n  });\r\n  // eliminar repetidos\r\n  const nameMap = rarity.map((brawler) => {\r\n    return [brawler.name, brawler];\r\n  });\r\n  const nameMapArr = new Map(nameMap);\r\n\r\n  // le agrego el ALL para usarlo en el filtro\r\n  return [...nameMapArr.values(), { name: 'ALL', color: '#fff' }];\r\n}\r\n\r\nfunction sortAsc(a, b) {\r\n  if (a.name < b.name) {\r\n    return -1;\r\n  }\r\n  if (a.name > b.name) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction sortDesc(a, b) {\r\n  if (a.name > b.name) {\r\n    return -1;\r\n  }\r\n  if (a.name < b.name) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterRarity, sortBrawlers } from '../../store/slices/brawlers';\r\nimport styled from 'styled-components';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const [type, setType] = useState('');\r\n  const [alf, setAlf] = useState('');\r\n  const rarity = useSelector((state) => state.brawlers.rarity);\r\n\r\n  const handleChangeRarity = (e) => {\r\n    setType(e.target.value);\r\n    dispatch(filterRarity(e.target.value));\r\n  };\r\n\r\n  const handleChangeAlf = (e) => {\r\n    setAlf(e.target.value);\r\n    dispatch(sortBrawlers(e.target.value));\r\n  };\r\n\r\n  console.log(rarity);\r\n  return (\r\n    <StyledFilter>\r\n      <div className='filter__rarity'>\r\n        {rarity.length > 0 &&\r\n          rarity.map((rarity) => (\r\n            <label key={rarity.name} style={{ color: `${rarity.color}` }}>\r\n              <input\r\n                type='radio'\r\n                name='rarity'\r\n                value={rarity.name}\r\n                onChange={handleChangeRarity}\r\n              />\r\n              {rarity.name}\r\n            </label>\r\n          ))}\r\n      </div>\r\n      <div className='filter__alf'>\r\n        <label>\r\n          <input\r\n            type='radio'\r\n            name='alf'\r\n            value='A-Z'\r\n            onChange={(e) => handleChangeAlf(e)}\r\n          />\r\n          A-Z\r\n        </label>\r\n        <label>\r\n          <input\r\n            type='radio'\r\n            name='alf'\r\n            value='Z-A'\r\n            onChange={(e) => handleChangeAlf(e)}\r\n          />\r\n          Z-A\r\n        </label>\r\n      </div>\r\n    </StyledFilter>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nconst StyledFilter = styled.div`\r\n  .filter__rarity {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto);\r\n    grid-gap: 10px;\r\n    width: 80%;\r\n    margin: 10px auto;\r\n    justify-items: center;\r\n    align-items: center;\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(2, auto);\r\n    }\r\n    label {\r\n      background: #000;\r\n      font-size: 1.2rem;\r\n      letter-spacing: 1px;\r\n      padding: 5px;\r\n      font-weight: bold;\r\n      cursor: pointer ;\r\n      border-radius: 10px;\r\n    }\r\n    input {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  .filter__alf {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    label {\r\n      color: #000;\r\n      font-size: 1.2rem;\r\n      letter-spacing: 1px;\r\n      padding: 5px;\r\n      font-weight: 800;\r\n      cursor: pointer;\r\n    }\r\n    input{\r\n      margin: 0 10px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchBrawlers, resetBrawlers } from '../../store/slices/brawlers';\r\nimport styled from 'styled-components';\r\n\r\nconst Search = () => {\r\n  const dispatch = useDispatch();\r\n  const [search, setSearch] = useState('');\r\n\r\n  const resetBrawler = () => {\r\n    dispatch(resetBrawlers());\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n    dispatch(searchBrawlers(search));\r\n  };\r\n\r\n  return (\r\n    <StyledSearch>\r\n      <input\r\n        type='text'\r\n        placeholder='...'\r\n        value={search}\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <button onClick={() => resetBrawler()}>Reset</button>\r\n    </StyledSearch>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n\r\nconst StyledSearch = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 5px;\r\n  margin-right: 30px;\r\n  input{\r\n    padding: 5px;\r\n    width: 70px;\r\n    outline: none;\r\n    border: none;\r\n    background: rgba(30,30,30,0.5);\r\n    color: #fff;\r\n    padding: 5px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    transition: all 0.3s ease-in-out;\r\n    &:hover,&:focus{\r\n      width: 120px;\r\n    }\r\n    &::placeholder{\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  button {\r\n    border: none;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: 800;\r\n    padding: 5px;\r\n    width: 60px;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    background: rgba(70,70,70,1);\r\n    transition: all 0.3s ease-in-out;\r\n    &:hover,&:focus{\r\n      background: #00ff44;\r\n      color: #000;\r\n    }\r\n  }\r\n`","import styled from 'styled-components';\r\n\r\nexport const StyledHome = styled.div`\r\n  .title {\r\n    letter-spacing: 2px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    h1 {\r\n      margin-top: 2.5rem;\r\n      text-shadow: 0px 0px 10px #fff;\r\n    }\r\n  }\r\n\r\n  .cards{\r\n    padding: 10px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\r\n    grid-gap: 30px;\r\n    justify-items: center;\r\n    align-items: center;    \r\n  }\r\n\r\n\r\n  .card{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n    position: relative;\r\n    p{\r\n      letter-spacing: 1px;\r\n      font-weight: 700;\r\n      margin-right: 2px;\r\n      background: rgba(230,230,230,0.5);\r\n      position: absolute;\r\n      bottom: -20px;\r\n      right: 0;\r\n      text-align: right;\r\n      padding: 2px;\r\n    }\r\n\r\n    h3{\r\n      margin-left: 5px;\r\n      position: absolute;\r\n      bottom: 15px;\r\n      border-radius: 5px;\r\n      padding: 5px;\r\n      font-weight: bold;\r\n      background: #000;\r\n    }\r\n\r\n    h4{\r\n      position: absolute;\r\n      top: 10px;\r\n      color: #fff;\r\n      z-index: 1;\r\n      margin-left: 5px;\r\n      letter-spacing: 1px;\r\n      font-weight: 300;\r\n      left: 2px;\r\n      background: #000;\r\n      padding: 8px;\r\n      border-radius: 50px;\r\n    }\r\n\r\n    img{\r\n      width: 160px;\r\n      height:160px;\r\n      transition: 0.3s ease-in-out;\r\n      cursor: pointer;\r\n      border-radius: 25px;\r\n      filter: grayscale(50%);\r\n      &:hover{\r\n        transform: translate3d(10px, 10px, 0) rotate(5deg);\r\n        filter: grayscale(0%);\r\n        box-shadow: 0px 0px 10px #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .loader{\r\n    margin: 6rem 0;\r\n    padding: 10px;\r\n  }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Background } from '../../Components/Background/Background';\r\nimport Filter from '../../Components/Filter/Filter';\r\nimport Search from '../../Components/Search/Search';\r\n// fetch Brawlers\r\nimport { fetchBrawlers } from '../../store/slices/brawlers';\r\nimport { StyledHome } from './StyledHome';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const brawlers = useSelector((state) => state.brawlers.list);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n  \r\n    if(brawlers.length === 0){\r\n      dispatch(fetchBrawlers());\r\n      setLoading(true)\r\n    }else{\r\n      setLoading(true)\r\n    }\r\n    \r\n  }, [dispatch]);\r\n\r\n  \r\n\r\n  console.log(brawlers);\r\n  return (\r\n    <Background image='https://i.pinimg.com/originals/a3/ff/1f/a3ff1f383a66211e265f2109de207b66.jpg'>\r\n      <StyledHome>\r\n        <div className='title'>\r\n          <h1>Brawlers</h1>\r\n        </div>\r\n\r\n        {loading && (\r\n          <div>\r\n            <Search />\r\n            <Filter />\r\n          </div>\r\n        )}\r\n\r\n        <div className='cards'>\r\n          {loading && brawlers.length > 0 ? (\r\n            brawlers.map((brawler) => {\r\n              let id = Number(brawler.id.toString().slice(-2)) + 1;\r\n              let idNumber = id > 9 ? id : `0${id}`;\r\n              return (\r\n                <div key={brawler.id} className='card'>\r\n                  <h4>{idNumber}</h4>\r\n                  <img src={brawler.imageUrl} alt={brawler.name} />\r\n                  <h3 style={{ color: `${brawler.rarity.color}` }}>\r\n                    {brawler.name}\r\n                  </h3>\r\n                  <p>{brawler.class.name}</p>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className='loader'>\r\n              <Triangle\r\n                color='#000'\r\n                height={130}\r\n                width={130}\r\n                ariaLabel='loading-indicator'\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </StyledHome>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport {GoHome} from 'react-icons/go';\r\n\r\nconst NavBar = () => {\r\n\r\n  const [colorChange, setColorChange] = useState(false);\r\n  const changeColor = () => {\r\n    if(window.scrollY >= 100) {\r\n      setColorChange(true);\r\n    }else{\r\n      setColorChange(false);\r\n    }\r\n  }\r\n  \r\n  window.addEventListener('scroll', changeColor);\r\n\r\n  return (\r\n    <Nav color={colorChange}>\r\n      <div className='home'>\r\n        <Link to='/'> \r\n          <GoHome/> \r\n        </Link>\r\n      </div>\r\n\r\n      <div className='nav-links'>\r\n        <Link to='/maps'>Maps</Link>\r\n        <Link to='/game'>Game</Link>\r\n      </div>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: ${props => props.color ? 'transparent' : 'rgba(30,30,30,0.5)'};\r\n  padding: 0.5rem 1rem;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 2;\r\n  \r\n  \r\n\r\n  .home{\r\n    margin-left: 10px;\r\n    display: flex;\r\n    a{\r\n      color: blue;\r\n      background: #000;\r\n      border-radius: 999px;\r\n      padding: 10px;\r\n      text-decoration: none;\r\n      color: #fff;\r\n      font-size: 1.2rem;\r\n      letter-spacing: 1px;\r\n      font-weight: 800;\r\n      transition: all 0.3s ease-in-out;\r\n      &:hover{\r\n        transform: translateY(3px) scale(1.1);\r\n        box-shadow: 0 0 10px #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  .nav-links{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-right: 10px ;\r\n\r\n    a{\r\n      margin-right: 10px;\r\n      text-decoration: none;\r\n      color: #fff;\r\n      font-size: 1.2rem;\r\n      padding: 6px ;\r\n      background: #000;\r\n      border-radius: 5px;\r\n      letter-spacing: 1px;\r\n      font-weight: 800;\r\n      transition: all 0.3s ease-in-out;\r\n      &:hover{\r\n        transform: translateY(-3px);\r\n        color: #000;\r\n        background: #00ff44 ;\r\n        box-shadow: 0 0 10px #000;\r\n      }\r\n   }\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const mapsSlice = createSlice({\r\n  name: 'maps',\r\n  initialState: {\r\n    list: [],\r\n    originalList: [],\r\n    gameMode: [],\r\n  },\r\n  reducers: {\r\n    setMaps: (state, action) => {\r\n      state.list = action.payload;\r\n      state.originalList = action.payload;\r\n      state.gameMode = noRepeatGameMode(state);\r\n    },\r\n    setFilterGameMode: (state, action) => {\r\n      const game = action.payload;\r\n      game === 'ALL'\r\n        ? (state.list = state.originalList)\r\n        : (state.list = state.originalList.filter(\r\n            (map) => map.gameMode.name === game\r\n          ));\r\n    }\r\n  },\r\n});\r\n\r\nexport default mapsSlice.reducer;\r\n\r\nexport const { setMaps, setFilterGameMode } = mapsSlice.actions;\r\n\r\nexport const fetchMaps = () => async (dispatch) => {\r\n  const response = await axios.get('https://api.brawlapi.com/v1/maps');\r\n  dispatch(setMaps(response.data.list));\r\n}\r\n\r\nexport const filterGameMode =  (data) => async (dispatch) => {\r\n  dispatch(setFilterGameMode(data));\r\n}\r\n\r\n\r\nfunction noRepeatGameMode(state){\r\n  const game = state.originalList.map((map) => {\r\n    return {\r\n      name: map.gameMode.name,\r\n      image: map.gameMode.imageUrl\r\n    };\r\n  });\r\n  const nameMap = game.map((map) => {\r\n    return [map.name, map];\r\n  });\r\n  const unique = new Map(nameMap);\r\n\r\n  return [...unique.values(), {name: 'ALL', image: 'https://lh3.googleusercontent.com/l1J0x4Kg12WEsHw_R3AgyIJayRdQ7UVJXO4aQUj3eoeeWAdWSnHN8gdJ4wOTrfVvQCaO=s180'}];\r\n}","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { filterGameMode } from '../../store/slices/maps';\r\n\r\n\r\nconst FilterMaps = () => {\r\n  const dispatch = useDispatch();\r\n  const [game, setGame] = useState('');\r\n  const maps = useSelector((state) => state.maps.gameMode);\r\n\r\n  const handeChangeGame = (e) => {\r\n    setGame(e.target.value);\r\n    dispatch(filterGameMode(e.target.value));\r\n  }\r\n  console.log(maps);\r\n\r\n  return (\r\n    <FilterMapsStyled>\r\n      <div className='filter__gameMode'>\r\n      {\r\n        maps.length > 0 && maps.map((map) => (\r\n          <label key={map.name}>\r\n            <img src={map.image} alt={map.name} height='45px' width='45px'/>\r\n            <input\r\n              type='radio'\r\n              name='gameMode'\r\n              value={map.name}\r\n              onChange={handeChangeGame}\r\n            />\r\n          </label>\r\n        ))\r\n      }\r\n      </div>\r\n    </FilterMapsStyled>\r\n  )\r\n}\r\n\r\nexport default FilterMaps\r\n\r\n\r\nconst FilterMapsStyled = styled.div`\r\n  .filter__gameMode {\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(6, auto);\r\n    grid-gap: 5px;\r\n    width: 100%;\r\n    margin: 10px auto;\r\n    justify-items: center;\r\n    align-items: center;\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(3, auto);\r\n    }\r\n    input[type='radio'] {\r\n      margin-left: 5px;\r\n      \r\n    }\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledMaps = styled.div`\r\n  .title {\r\n    letter-spacing: 2px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    h1 {\r\n      margin-top: 2.5rem;\r\n      text-shadow: 0px 0px 10px #fff;\r\n    }\r\n  }\r\n\r\n  .cards {\r\n    padding: 10px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\r\n    grid-gap: 30px;\r\n    justify-items: center;\r\n    align-items: center;\r\n    align-content: center;\r\n  }\r\n\r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n    background: rgba(230,230,230,0.5);\r\n    box-shadow: 0px 0px 10px #000;\r\n    transition: all 0.3s ease-in-out;\r\n    &:hover {\r\n      background: rgba(30,30,30,1);\r\n      color: #fff;\r\n      box-shadow: 0px 0px 10px #fff inset, 0px 0px 10px #fff;\r\n    }\r\n\r\n    .image__maps{\r\n      \r\n      width: 200px;\r\n      height: 200px;\r\n      cursor: pointer;\r\n      filter: grayscale(50%);\r\n      transition: 0.4s ease-in-out;\r\n      border-radius: 5px;\r\n      :hover{ \r\n        filter: grayscale(0%);\r\n      }\r\n    }\r\n\r\n    .image__gameMode{\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n    h3{\r\n      padding: 5px;\r\n      font-weight: bold;\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  .loader{\r\n    margin: 6rem 0;\r\n    padding: 10px;\r\n  }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Background } from '../../Components/Background/Background';\r\nimport FilterMaps from '../../Components/Filter/FilterMaps';\r\nimport { fetchMaps } from '../../store/slices/maps';\r\nimport { StyledMaps } from './StyledMaps';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nconst Maps = () => {\r\n  const dispatch = useDispatch();\r\n  const maps = useSelector((state) => state.maps.list);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(maps.length  === 0){\r\n      dispatch(fetchMaps())\r\n      setLoading(true)\r\n    }else{\r\n      setLoading(true)\r\n    }\r\n  }, [dispatch]);\r\n\r\n  console.log('filter',maps);\r\n\r\n  return (\r\n    <Background image='https://wallpaperaccess.com/full/2951789.jpg'>\r\n      <StyledMaps>\r\n        <div className='title'>\r\n          <h1>Maps</h1>\r\n        </div>\r\n        {\r\n          loading && <FilterMaps />\r\n        }\r\n        \r\n        <div className='cards'>\r\n          {loading && maps.length > 0 ? (\r\n            maps.map((map) => {\r\n              return (\r\n                <div key={map.id} className='card'>\r\n                  <img className='image__gameMode' src={map.gameMode.imageUrl} alt={map.gameMode.name}/>\r\n                  <img className='image__maps'src={map.imageUrl} alt={map.name} />\r\n                  <h3>{map.name}</h3>\r\n                </div>\r\n              )\r\n            })\r\n          ) : (\r\n            <div className='loader'>\r\n              <Triangle \r\n              color='#000' \r\n              height={130} \r\n              width={130} ariaLabel='loading-indicator'\r\n              />\r\n            </div>\r\n          )\r\n          }\r\n        </div>\r\n      </StyledMaps>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Maps;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledGame = styled.div`\r\n  \r\n  .title {\r\n    letter-spacing: 2px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    h1 {\r\n      margin-top: 2.5rem;\r\n      text-shadow: 0px 0px 10px #fff;\r\n    }\r\n  }\r\n\r\n  .cards {\r\n    margin-top: 20px;\r\n    padding: 10px;\r\n    display: grid;\r\n    justify-items: center;\r\n    align-items: center;\r\n    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\r\n  }\r\n\r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 5px 0;\r\n    transition: all 0.3s ease-in-out;\r\n    padding: 10px;\r\n    text-align: center;\r\n    &:hover{\r\n      box-shadow: 0px 0px 10px #000 inset, 0px 0px 10px #000;\r\n      transform: translateY(-5px);\r\n    }\r\n\r\n    img {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n\r\n    h3 {\r\n      letter-spacing: 1px;\r\n      font-weight: 700;\r\n      text-shadow: 1px 1px 10px #fff;\r\n    }\r\n\r\n    p {\r\n      color: #fff;\r\n      letter-spacing: 1px;\r\n      font-weight: 700;\r\n      text-shadow: 1px 1px 10px #000;\r\n    }\r\n  }\r\n\r\n  .loader{\r\n    margin: 6rem 0;\r\n    padding: 10px;\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  reducers : {\r\n    setGame: (state, action) => {\r\n      state.list = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport default gameSlice.reducer;\r\n\r\nexport const { setGame } = gameSlice.actions;\r\n\r\n\r\nexport const fetchGame = () => async (dispatch) => {\r\n  const response = await axios.get('https://api.brawlapi.com/v1/gamemodes');\r\n  dispatch(setGame(response.data.list));\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Background } from '../../Components/Background/Background';\r\nimport { StyledGame } from './StyledGame';\r\nimport { fetchGame } from '../../store/slices/gameModes';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const game = useSelector((state) => state.game.list);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (game.length === 0) {\r\n      dispatch(fetchGame());\r\n      setLoading(true);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  console.log(game);\r\n  return (\r\n    <Background image='https://www.meme-arsenal.com/memes/400b116145ad9090d4fddc1bd7c58324.jpg'>\r\n      <StyledGame>\r\n        \r\n        <div className='title'>\r\n          <h1>Game</h1>\r\n        </div>\r\n\r\n        <div className='cards'>\r\n          {loading && game.length > 0 ? (\r\n            game.map((mode) => {\r\n              return (\r\n                <div key={mode.id} className='card'>\r\n                  <h3>{mode.name}</h3>\r\n                  <img src={mode.imageUrl} alt={mode.name} />\r\n                  <p>{mode.title}</p>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className='loader'>\r\n              <Triangle\r\n                color='#000'\r\n                height={130}\r\n                width={130}\r\n                ariaLabel='loading-indicator'\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </StyledGame>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Home from './pages/Home/Home';\r\nimport {Routes, Route} from 'react-router-dom'\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport Maps from './pages/Maps/Maps';\r\nimport Game from './pages/Game/Game';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <Routes>\r\n        <Route path=\"/brawl-react\" element={<Home />} />\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/maps\" element={<Maps />} />\r\n        <Route path=\"/game\" element={<Game />} />\r\n      </Routes>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport brawlers from './slices/brawlers/index.js';\r\nimport maps from './slices/maps/index.js';\r\nimport game from './slices/gameModes/index.js';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    brawlers,\r\n    maps,\r\n    game\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport store from './store/index.js';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}